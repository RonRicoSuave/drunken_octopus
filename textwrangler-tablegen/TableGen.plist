<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple/DTD PLIST 1.0//EN"
				"http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">

<dict>
	<key>BBEditDocumentType</key>	     				<string>CodelessLanguageModule</string>
	<key>BBLMLanguageDisplayName</key> 				<string>Tablegen</string>
	<key>BBLMLanguageCode</key>				 				<string>TGEN</string>
	<key>BBLMPreferredFilenameExtension</key> <string>td</string>
	<key>BBLMFileNamesToMatch</key>           
	  <array>
	    <string>*.td</string>
	  </array>
	<key>BBLMSupportTextCompletion</key>			<true/>
  <key>BBLMScansFunctions</key>             <true/>
	<key>BBLMCanSpellCheckCodeRuns</key>			<false/>
	<key>BBLMCommentPrefixDefault</key>       <string>/*</string>
	<key>BBLMCommentSuffixDefault</key>       <string>*/</string>
	<key>BBLMIsCaseSensitive</key>						<true/>
	<key>BBLMColorsSyntax</key>								<true/>
	<key>BBLMSuffixMap</key>
	  <array>
	    <dict>
	      <key>BBLMLanguageSuffix</key>
	      <string>.td</string>
	    </dict>
	  </array>
	<key>BBLMKeywordList</key>
	  <array>
	    <string>class</string>
	    <string>multiclass</string>
	    <string>let</string>
	    <string>list</string>
	    <string>dag</string>
	    <string>def</string>
	    <string>defm</string>
	    <string>f16</string>
	    <string>f32</string>
	    <string>f64</string>
	    <string>field</string>
	    <string>fpimm</string>
	    <string>include</string>
	    <string>in</string>
	    <string>ins</string>
	    <string>int</string>
	    <string>int8_t</string>
	    <string>int16_t</string>
	    <string>int32_t</string>
	    <string>int64_t</string>
	    <string>outs</string>
	    <string>uint8_t</string>
	    <string>uint16_t</string>
	    <string>uint32_t</string>
	    <string>uint64_t</string>
 	    <string>i1</string>
 	    <string>i8</string>
 	    <string>i16</string>
 	    <string>i32</string>
 	    <string>i64</string>
 	    <string>i1imm</string>
 	    <string>i8imm</string>
 	    <string>i16imm</string>
 	    <string>i32imm</string>
 	    <string>i64imm</string>
	    <string>string</string>
 	    <string>opnode</string>
 	    <string>Inst</string>
 	    <string>set</string>
 	    <string>bits</string>
 	    <string>bit</string>
	  </array>
	<key>BBLMPredefinedNameList</key>
	  <array>
      <!-- Method Overrides -->
 	    <string>DecoderMethod</string>
 	    <string>EncoderMethod</string>
 	    <string>ParserMethod</string>
 	    <string>PrintMethod</string>
      <!-- Base Classes -->
      <string>AddrMode</string>
      <string>APFloat</string>
 	    <string>AsmOperandClass</string>
 	    <string>AsmWriter</string>
 	    <string>BinOpFrag</string>
 	    <string>BinOpWithFlagFrag</string>
 	    <string>ComplexPattern</string>
 	    <string>Domain</string>
 	    <string>DwarfRegNum</string>
 	    <string>Format</string>
 	    <string>FuncUnit</string>
 	    <string>IndexMode</string>
 	    <string>Inst</string>
 	    <string>InstrInfo</string> 	    
 	    <string>Instruction</string>
 	    <string>InstrItinClass</string>
 	    <string>InstrItinData</string>
 	    <string>InstrStage</string>
 	    <string>InstAlias</string>
 	    <string>MIOperandInfo</string>
 	    <string>MnemonicAlias</string>
 	    <string>Operand</string>
	    <string>ParserMatchClass</string>
	    <string>PatFrag</string>
	    <string>PatLeaf</string>
	    <string>Predicate</string>
	    <string>Processor</string>
	    <string>ProcessorItineraries</string>
	    <string>ProcNoItin</string>
 	    <string>PseudoInst</string>
 	    <string>RegConstraint</string>
 	    <string>Register</string>
 	    <string>RegisterClass</string>
	    <string>SDNode</string>
 	    <string>SDNodeXForm</string>
 	    <string>SDTypeProfile</string>
 	    <string>SDValue</string>
 	    <string>SubRegIndex</string>
 	    <string>SubRegs</string>
 	    <string>SubtargetFeature</string>
 	    <string>Target</string>
 	    <string>UnOpFrag</string>
 	    <string>Value</string>
      <!-- SDNode Attributes -->
      <string>SDNPInGlue</string>
      <string>SDNPOutGlue</string>
      <string>SDTNone</string>
      <string>SDTCisVT</string>
      <string>SDTCisFP</string>
      <string>SDTCisSameAs</string>
      <!-- Base Types -->
 	    <string>AddressMode</string>
	    <string>Name</string>
 	    <string>OperandType</string>
 	    <!-- Instruction Attributes -->
 	    <string>AddedComplexity</string>
      <string>AsmString</string>
 	    <string>canFoldAsLoad</string>
 	    <string>Constraints</string>
 	    <string>DecoderNamespace</string>
 	    <string>Defs</string>
 	    <string>hasPostISelHook</string>
 	    <string>hasSideEffects</string>
 	    <string>InOperandList</string>
 	    <string>isBarrier</string>
 	    <string>isBranch</string>
 	    <string>isCodeGenOnly</string>
 	    <string>isIndirectBranch</string>
 	    <string>isMoveImm</string>
 	    <string>isNotDuplicable</string>
 	    <string>isPseudo</string>
 	    <string>isRematerializable</string>
 	    <string>isTerminator</string>
 	    <string>Itinerary</string>
 	    <string>mayLoad</string>
 	    <string>mayStore</string>
 	    <string>Namespace</string>
 	    <string>NoHonorSignDependentRounding</string>
 	    <string>neverHasSideEffects</string>
 	    <string>OutOperandList</string>
 	    <string>Pattern</string>
 	    <string>Requires</string>
 	    <string>TSFlags</string>   
 	    <string>Uses</string>
 	    <string>usesCustomInserter</string>
      <!-- AsmWriter Attributes -->
      <string>AsmWriterClassName</string>
      <string>isMCAsmWriter</string>
      <!-- Target Attributes -->
      <string>AssemblyWriters</string>
      <string>InstructionSet</string>
      <!-- Register Attributes -->
      <string>AltOrders</string>
      <string>AltOrdersSelect</string>
      <string>CopyCost</string>
      <string>SubRegClasses</string>      
      <!-- Functions -->      
 	    <string>!strconcat</string>
 	    <string>!cast</string>
 	    <string>!con</string>
 	    <string>!eq</string>
 	    <string>getZExtValue</string>
 	    <string>getTargetConstant</string>
 	    <string>getValueAPF</string>
 	    <string>ComputeNumSignBits</string>
      <!-- Operations and SDNode types -->
 	    <string>add</string>
	    <string>and</string>
	    <string>bitconvert</string>
 	    <string>bswap</string>
 	    <string>ctlz</string>	    
	    <string>fmul</string>
	    <string>fabs</string>
	    <string>fadd</string>
	    <string>fadd_mlx</string>
	    <string>fdiv</string>
	    <string>fextend</string>
	    <string>fmul_su</string>
	    <string>fneg</string>
	    <string>fround</string>
	    <string>fsqrt</string>
	    <string>fsub</string>
	    <string>fsub_mlx</string>
 	    <string>load</string>
 	    <string>mul</string>
	    <string>or</string>
 	    <string>PKHTB</string>
	    <string>return</string>
 	    <string>REVSH</string>
	    <string>rotr</string>
 	    <string>sext_inreg</string>
 	    <string>sextloadi8</string>
 	    <string>sextloadi16</string>
	    <string>shl</string>
	    <string>srl</string>
	    <string>sra</string>
	    <string>xor</string>
 	    <string>zextloadi8</string>
 	    <string>zextloadi16</string>
	  </array>  
	
	<key>BBLMCommentLineDefault</key>
	  <string>//</string>
	
	<key>Language Features</key>
  	<dict>
  	  <key>Identifier and Keyword Character Class</key>
  	  <string>A-Za-z0-9_!</string>
	    <key>Open Block Comments</key>        <string>/*</string>
	    <key>Close Block Comments</key>       <string>*/</string>
	    <key>Open Line Comments</key>         <string>//</string>
	    <key>Open Strings 1</key>             <string>"</string>
	    <key>Close Strings 1</key>            <string>"</string>
	    <key>Open Strings 2</key>             <string>'</string>
	    <key>Close Strings 2</key>            <string>'</string>
	    <key>Escape Char in Strings 1</key>   <string>\</string>
	    <key>End-of-line Ends Strings 1</key> <true/>
	    <key>End-of-line Ends Strings 2</key> <true/>
	    <key>Open Parameter Lists</key>       <string>&lt;</string>
	    <key>Close Parameter Lists</key>      <string>&gt;</string>
	    <key>Terminator for Prototypes 1</key> <string>;</string>
	    <key>Open Statement Blocks</key>      <string>{</string>
	    <key>Close Statement Blocks</key>     <string>}</string>
      <key>Function Pattern</key>
        <string><![CDATA[(?x:
                (?P<function>
                  ^
                  [\s\n\r]*
                  (?P<function_name>
                    (?>
                      (def) |
                      (defm) |
                      (class) |
                      (multiclass) |
                    )
                    \s+
                    [:a-zA-Z0-9_]+
                  )
                  [^{}\n\r]*
                  (?P<function_body>
                    (?>                                            
                      {[^{}]*}                      
                    ) 
                    (?>
                      \s*{[^{}]*}
                    )?
                  )
                  [^{}\n\r]*$
                )
              )]]>
        </string>
	  </dict>
</dict>
</plist>